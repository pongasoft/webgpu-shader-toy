cmake_minimum_required(VERSION 3.28)

# CLion configuration. Note that Ninja does NOT work with c++ 20 for some unknown reason...
# -G "Unix Makefiles" -DCMAKE_TOOLCHAIN_FILE=/usr/local/emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake -DCMAKE_BUILD_TYPE=Debug

set(wgpu-shader-toy_RELEASE_YEAR  "2024")
set(wgpu-shader-toy_RELEASE_MONTH "07"  )
set(wgpu-shader-toy_RELEASE_DAY   "09"  )

set(wgpu-shader-toy_VERSION "${wgpu-shader-toy_RELEASE_YEAR}${wgpu-shader-toy_RELEASE_MONTH}${wgpu-shader-toy_RELEASE_DAY}")

project(wgpu_shader_toy LANGUAGES CXX)

if(NOT EMSCRIPTEN)
  message(FATAL_ERROR "This project must be compiled with emscripten")
endif()

set(CMAKE_WARN_UNUSED OFF)

set(CMAKE_CXX_STANDARD 20)

set(wgpu_shader_toy_sources
    src/cpp/Application.h
    src/cpp/Application.cpp
    src/cpp/FragmentShader.h
    src/cpp/FragmentShaderWindow.h
    src/cpp/FragmentShaderExamples.cpp
    src/cpp/FragmentShaderWindow.cpp
    src/cpp/Errors.h
    src/cpp/MainWindow.h
    src/cpp/MainWindow.cpp
    src/cpp/Preferences.h
    src/cpp/Preferences.cpp
    src/cpp/State.h
    src/cpp/fmt.h

    src/cpp/main.cpp

    src/cpp/gui/Dialog.h
    src/cpp/gui/Dialog.cpp
    src/cpp/gui/WstGui.h
    src/cpp/gui/WstGui.cpp

    src/cpp/gpu/GPU.h
    src/cpp/gpu/GPU.cpp
    src/cpp/gpu/ImGuiWindow.h
    src/cpp/gpu/ImGuiWindow.cpp
    src/cpp/gpu/Renderable.h
    src/cpp/gpu/Window.h
    src/cpp/gpu/Window.cpp

    src/cpp/utils/DataManager.h
    src/cpp/utils/DataManager.cpp
    src/cpp/utils/Storage.h
    src/cpp/utils/JSStorage.cpp

    external/santaclose/ImGuiColorTextEdit/TextEditor.cpp
)

set(VERSION_DIR "${CMAKE_BINARY_DIR}/generated")
configure_file("${CMAKE_CURRENT_LIST_DIR}/src/cpp/version.h.in" "${VERSION_DIR}/version.h")

add_executable(wgpu_shader_toy "${wgpu_shader_toy_sources}")

set_target_properties(wgpu_shader_toy PROPERTIES OUTPUT_NAME "index")
target_include_directories(wgpu_shader_toy PUBLIC
    "${VERSION_DIR}"
    "external/nlohmann/json/single_include"
    "external/santaclose/ImGuiColorTextEdit"
    "external/fonts/src"
)

file(COPY ${CMAKE_SOURCE_DIR}/src/resources/images DESTINATION ${CMAKE_BINARY_DIR})
configure_file(${CMAKE_SOURCE_DIR}/src/resources/emscripten/shell.html ${CMAKE_BINARY_DIR}/index.html @ONLY)

#set(wgpu_shader_toy_options "--use-port=contrib.glfw3" "--use-port=${CMAKE_SOURCE_DIR}/external/emscripten-ports/imgui.py:backend=glfw:renderer=wgpu:disableDemo=$<IF:$<CONFIG:Debug>,false,true>")
set(wgpu_shader_toy_options "--use-port=${CMAKE_SOURCE_DIR}/external/emscripten-ports/emscripten-glfw3.py" "--use-port=${CMAKE_SOURCE_DIR}/external/emscripten-ports/imgui.py:backend=glfw:renderer=wgpu:disableDemo=$<IF:$<CONFIG:Debug>,false,true>")

target_compile_options(wgpu_shader_toy PUBLIC
    "${wgpu_shader_toy_options}"
    "-fwasm-exceptions"
)

target_link_options(wgpu_shader_toy PUBLIC
    "-fwasm-exceptions"
    "${wgpu_shader_toy_options}"
    "--js-library" "${CMAKE_CURRENT_LIST_DIR}/src/js/lib_wgpu_shader_toy.js"
)
